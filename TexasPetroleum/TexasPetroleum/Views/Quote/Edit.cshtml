@model TexasPetroleum.ViewModels.QuoteVM

@{
    ViewBag.Title = "Edit";
}

<h2>Quote Form</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AddressLine1, new { @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.AddressLine2, new { @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.City, new { @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.State, new { @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Zipcode, new { @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", type = "date", id = "datePicker" } })
            @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SuggestedPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.SuggestedPrice, new { id = "SugPrice", @readonly = "readonly", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SuggestedPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GallonsRequested, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.GallonsRequested, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GallonsRequested, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.TotalPrice, new { id = "TotPrice", @readonly = "readonly", @class = "form-control" })
        </div>
    </div>

    <div id="button">
        <div class="col-md-10">
            <button id="getPriceButton" type="button" class="btn btn-primary" disabled>Get Price</button>
        </div>
    </div>
    @using (Html.BeginForm("Edit", "Quote", FormMethod.Post))
    {
        <button id="SaveButton" class="btn btn-success mt-3" disabled>Save</button>
    }
</div>
}



@section scripts
{
    <script>
        
        var gallonState = 0;
        var gs2;
        var deliveryDate;
        var deliveryDateState;

        // Checks input state to make sure that we can allow the user to click the buttons
        function checkInputState() {
           
            if ($('#datePicker').val() != '' && ($('#GallonsRequested').val() > 0 && $('#GallonsRequested').val().length != 0)) {
                $('#getPriceButton').attr("disabled", false);
            }
            else {
                $('#getPriceButton').attr("disabled", true);
            }

            gs2 = parseInt($('#GallonsRequested').val());
          
            if (gallonState != gs2 || deliveryDateState != deliveryDate) {
                $('#SaveButton').attr("disabled", true);
            }
            else {
                console.log($('#datePicker').val());
            }
        }

        // handles all triggers to update the DOM
        $(document).ready(function () {

            // triggers to validate input to enable Get Price button 
            $("input").keyup(function (event) {
                checkInputState();
            });

            $('#datePicker').click(function () {
                deliveryDate = $('#datePicker').val();
                checkInputState();
            });

            // Enables Save button on click and updates DOM with proper input text
            $("#getPriceButton").click(function () {
                
                var gallons = $('#GallonsRequested').val();
                var state = $('#State').val();
                gallonState = gallons;
                
                deliveryDateState = deliveryDate;
                $('#SaveButton').attr("disabled", false);
                $.ajax({
                    type: "POST",
                    url: "/Quote/GetPrice",
                    data: JSON.stringify({ GallonsRequested: gallons, State: state }),
                    contentType: "application/json",
                    dataType: "json",

                    success: function (result) {
                        $("#SugPrice").val(result.SuggestedPrice);
                        $("#TotPrice").val(result.TotalPrice);
                    }
                });
            });
        });

    </script>
}